openapi: "3.0.0"
info:
  version: 0.1.1
  title: Sample Application 2
  license:
    name: MIT
servers:
  - url: http://petstore.swagger.io/v1
paths:
  /users:
    post:
      summary: Create a User
      operationId: createUsers
      tags:
        - users
      requestBody:
        description: Create User request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        '200':
          description:  Response for a user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: List all Users
      operationId: listUsers
      tags:
        - users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersCollection"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /users/{userId}:
    get:
      summary: Info for a specific user
      operationId: getUser
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to retrieve
          schema:
            type: string
      requestBody:
        description: Update User request
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: update details of a user
      operationId: updateUser
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to update
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: deletes a  user
      operationId: deleteUser
      tags:
        - users
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to delete
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    User:
      type: object
      required:
        - id
        - fullName
        - email
      properties:
        id:
          type: integer
          format: int64
        fullName:
          type: string
        email:
          type: string
        phone:
          type: number
        dob:
          type: number
        additionalInfo:
          type: string

    CreateUserRequest:
      type: object
      required:
        - fullName
        - email
        - dob
      properties:
        fullName:
          type: string
        email:
          type: string
        dob:
          type: string
          format: date
        phone:
          type: number
        additionalInfo:
          type: string
          maxLength: 1024

    UpdateUserRequest:
      type: object
      properties:
        fullName:
          type: string
        additionalInfo:
          type: string
          maxLength: 1024

    UsersCollection:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/User'
        count:
          type: number


    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string